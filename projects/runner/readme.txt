геометрические классы не очень складны - в том плане что доступ на чтение/запись в них не ограничен.. из-за этого
у потомков извне можно менять внутренние переменные, что скверно.. нужно изменить режим работы с геом. классами
хорошо бы просто запретить изменение извне оставить коструктор копии
т.е. доступ будет тока через костантные ссылки
для динамического изменения можно сделать отдельные классы variable_point и variable_size, наследуемые от базовых
 




ЕСЛИ ПОСЛЕ ДОБАВЛЕНИЯ НОВОГО СОБЫТИЯ НАЧАЛИСЬ ЧУДЕСА, НУЖНО ПЕРЕБИЛДИТЬ ВЕСЬ ПРОЕКТ




кэширование не позволяет использовать графику и звуки с одним путем и именем. пожалуй имеет
смысл разнести их по разным папкам


=====================================
архитектура связи.
=====================================
нужно свести к виртуальным игрокам, на каждой машине.
т.е. на уровне интерфейса:
1. создание сервера/поиск сервера (связка игроков должна происходить автоматически)
2. игроки удаленные и текущий должны выглядеть одинаково.
3. разрыв связи с игроком.. наверное просто его деструктор.

игрок - это только управление или что-то еще?
как на счет интерфейса?
какой должна быть структура программы, ориентированной на множество игроков?
с точки зрения траффика выгоднее передавать управление - кнопки/мышь. но как быть с интерфейсом?
может сделать дубляж интерфейса для каждого игрока?
если изначально рассчитывать на МИ, то разумно сделать скриптовый язык для описания реакции игры на действия игрока.
а без скриптового языка как это реализовать?
лучший вариант - подключение игроков реализовать неявно для программы, а все свести к классу обработчику для одного игрока.
т.е. создавать класс session для каждого из игроков. т.е. перегрузить метод в application session *new_session(...)
реакция игрока на события, интерфейс, камеры привязанны к классам каждого игрока.
т.е. классы session должны действительно быть. Имеет смысл ввести list<session> для всех сессий, где будут храниться
 статические данные каждой из сессий. имеет-ли смысл программе знать в какой сессии она работает? думаю нет.
сначала, я думаю, нужно ввести сессии в локальном масштабе - без влияния на диалоги. только игровой процесс.
а потом их перевести в основу.
